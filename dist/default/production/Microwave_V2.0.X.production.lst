

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 15:33:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataCOMMON
   176  0000'                    __pidataCOMMON:	
   177                           
   178                           ;initializer for _Key
   179  0000' 34FF               	retlw	255
   180                           
   181                           	psect	idataBANK0
   182  0000'                    __pidataBANK0:	
   183                           
   184                           ;initializer for _TIME
   185  0000' 3430               	retlw	48
   186  0001' 3430               	retlw	48
   187  0002' 343A               	retlw	58
   188  0003' 3430               	retlw	48
   189  0004' 3430               	retlw	48
   190  000E                     _TMR1L	set	14
   191  000F                     _TMR1H	set	15
   192  0006                     _PORTBbits	set	6
   193  0060                     _TMR1IF	set	96
   194  0089                     _TRISE	set	137
   195  0088                     _TRISD	set	136
   196  0087                     _TRISC	set	135
   197  0086                     _TRISB	set	134
   198                           
   199                           	psect	strings
   200  0000'                    __pstrings:	
   201  0000'                    stringtab:	
   202  0000'                    __stringtab:	
   203  0000'                    stringcode:	
   204                           ;	String table - string pointers are 1 byte each
   205                           
   206  0000'                    stringdir:	
   207  0000' 3000'              	movlw	high stringdir
   208  0001' 008A               	movwf	10
   209  0002' 0804               	movf	4,w
   210  0003' 0A84               	incf	4,f
   211  0004' 0782               	addwf	2,f
   212  0005'                    __stringbase:	
   213  0005' 3400               	retlw	0
   214  0006'                    __end_of__stringtab:	
   215  0006'                    STR_2:	
   216  0006' 343C               	retlw	60	;'<'
   217  0007' 3452               	retlw	82	;'R'
   218  0008' 3465               	retlw	101	;'e'
   219  0009' 3445               	retlw	69	;'E'
   220  000A' 346E               	retlw	110	;'n'
   221  000B' 3474               	retlw	116	;'t'
   222  000C' 3465               	retlw	101	;'e'
   223  000D' 3472               	retlw	114	;'r'
   224  000E' 3420               	retlw	32	;' '
   225  000F' 3474               	retlw	116	;'t'
   226  0010' 3469               	retlw	105	;'i'
   227  0011' 346D               	retlw	109	;'m'
   228  0012' 3465               	retlw	101	;'e'
   229  0013' 343E               	retlw	62	;'>'
   230  0014' 3400               	retlw	0
   231  0015'                    STR_1:	
   232  0015' 3454               	retlw	84	;'T'
   233  0016' 3469               	retlw	105	;'i'
   234  0017' 346D               	retlw	109	;'m'
   235  0018' 3465               	retlw	101	;'e'
   236  0019' 3420               	retlw	32	;' '
   237  001A' 3469               	retlw	105	;'i'
   238  001B' 3473               	retlw	115	;'s'
   239  001C' 3420               	retlw	32	;' '
   240  001D' 3453               	retlw	83	;'S'
   241  001E' 346D               	retlw	109	;'m'
   242  001F' 3461               	retlw	97	;'a'
   243  0020' 346C               	retlw	108	;'l'
   244  0021' 346C               	retlw	108	;'l'
   245  0022' 3400               	retlw	0
   246                           
   247                           ; #config settings
   248  0000                     
   249                           	psect	cinit
   250  0000'                    start_initialization:	
   251  0000'                    __initialization:	
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataBANK0	;fetch initializer
   255  0005' 0080'              	movwf	__pdataBANK0& (0+127)
   256  0006' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataBANK0+1	;fetch initializer
   257  000B' 0080'              	movwf	(__pdataBANK0+1)& (0+127)
   258  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataBANK0+2	;fetch initializer
   259  0011' 0080'              	movwf	(__pdataBANK0+2)& (0+127)
   260  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataBANK0+3	;fetch initializer
   261  0017' 0080'              	movwf	(__pdataBANK0+3)& (0+127)
   262  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataBANK0+4	;fetch initializer
   263  001D' 0080'              	movwf	(__pdataBANK0+4)& (0+127)
   264                           
   265                           ; Initialize objects allocated to COMMON
   266  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataCOMMON	;fetch initializer
   267  0023' 0080'              	movwf	__pdataCOMMON& (0+127)
   268                           
   269                           ; Clear objects allocated to BANK0
   270  0024' 0180'              	clrf	__pbssBANK0& (0+127)
   271  0025' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
   272  0026' 0180'              	clrf	(__pbssBANK0+2)& (0+127)
   273  0027' 0180'              	clrf	(__pbssBANK0+3)& (0+127)
   274  0028' 0180'              	clrf	(__pbssBANK0+4)& (0+127)
   275  0029' 0180'              	clrf	(__pbssBANK0+5)& (0+127)
   276  002A' 0180'              	clrf	(__pbssBANK0+6)& (0+127)
   277                           
   278                           ; Clear objects allocated to COMMON
   279  002B' 0180'              	clrf	__pbssCOMMON& (0+127)
   280  002C' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   281  002D' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
   282  002E' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
   283  002F' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
   284  0030'                    end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0030'                    __end_of__initialization:	
   288  0030' 0183               	clrf	3
   289  0031' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  0000'                    __pbssCOMMON:	
   293  0000'                    _STATEF:	
   294  0000'                    	ds	1
   295  0001'                    _HeatSET:	
   296  0001'                    	ds	1
   297  0002'                    _digit:	
   298  0002'                    	ds	1
   299  0003'                    _TMR1Counter:	
   300  0003'                    	ds	1
   301  0004'                    _DOOR:	
   302  0004'                    	ds	1
   303                           
   304                           	psect	dataCOMMON
   305  0000'                    __pdataCOMMON:	
   306  0000'                    _Key:	
   307  0000'                    	ds	1
   308                           
   309                           	psect	bssBANK0
   310  0000'                    __pbssBANK0:	
   311  0000'                    _TIMEinSec:	
   312  0000'                    	ds	2
   313  0002'                    _Temp:	
   314  0002'                    	ds	5
   315                           
   316                           	psect	dataBANK0
   317  0000'                    __pdataBANK0:	
   318  0000'                    _TIME:	
   319  0000'                    	ds	5
   320                           
   321                           	psect	cstackCOMMON
   322  0000'                    __pcstackCOMMON:	
   323  0000'                    ?_lcd_init:	
   324  0000'                    ??_lcd_init:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0000'                    ?_LCD_Start:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0000'                    ??_LCD_Start:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0000'                    ?_DOORSTATE:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0000'                    ??_DOORSTATE:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0000'                    ?_SETTIME_LCD:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0000'                    ??_SETTIME_LCD:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0000'                    ?_Move_Cursor_To:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0000'                    ??_Move_Cursor_To:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0000'                    ?_send_a_command:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0000'                    ??_send_a_command:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0000'                    ?_GetKeyPressed:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0000'                    ??_GetKeyPressed:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0000'                    ?_LCD_Print_Hex:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0000'                    ??_LCD_Print_Hex:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0000'                    ?_Move_Cursor_L:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0000'                    ??_Move_Cursor_L:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0000'                    ?_Move_Cursor_R:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0000'                    ??_Move_Cursor_R:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0000'                    ?_SETHEAT_LCD:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0000'                    ??_SETHEAT_LCD:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0000'                    ?_ADC_Read:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0000'                    ??_ADC_Read:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0000'                    ?_ADC_LCD:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0000'                    ??_ADC_LCD:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0000'                    ?_ONStatus:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0000'                    ??_ONStatus:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0000'                    ?_PrintLINE1:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0000'                    ??_PrintLINE1:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0000'                    ?_PrintLINE2:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0000'                    ??_PrintLINE2:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0000'                    ?_main:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0000'                    ?_ISR_H:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0000'                    ??_ISR_H:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0000'                    _Move_Cursor_To$1:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0000'                    _ADC_Read$0:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0000'                    _ADC_LCD$0:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0000'                    _PrintLINE1$1:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0000'                    _PrintLINE2$1:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0000'                    _ONStatus$0:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446  0000'                    	ds	1
   447  0001'                    _PrintLINE1$2:	
   448  0001'                    _PrintLINE2$2:	
   449                           ; 1 bytes @ 0x1
   450                           
   451                           
   452                           ; 1 bytes @ 0x1
   453  0001'                    	ds	1
   454  0002'                    ?___wmul:	
   455  0002'                    _ONStatus$1:	
   456                           ; 2 bytes @ 0x2
   457                           
   458  0002'                    ___wmul@multiplier:	
   459                           ; 1 bytes @ 0x2
   460                           
   461                           
   462                           ; 2 bytes @ 0x2
   463  0002'                    	ds	2
   464  0004'                    ___wmul@multiplicand:	
   465                           
   466                           ; 2 bytes @ 0x4
   467  0004'                    	ds	2
   468  0006'                    ??___wmul:	
   469                           
   470                           	psect	cstackBANK0
   471  0000'                    __pcstackBANK0:	
   472                           ; 1 bytes @ 0x6
   473                           
   474  0000'                    ___wmul@product:	
   475                           
   476                           ; 2 bytes @ 0x0
   477  0000'                    	ds	2
   478  0002'                    ??_main:	
   479                           
   480                           ; 1 bytes @ 0x2
   481  0002'                    	ds	14
   482                           
   483                           	psect	maintext
   484  0000'                    __pmaintext:	
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 48 in file "Project Main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : B00/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0      14       0       0       0
   507 ;;      Totals:         0      14       0       0       0
   508 ;;Total ram usage:       14 bytes
   509 ;; Hardware stack levels required when called:    2
   510 ;; This function calls:
   511 ;;		_ADC_LCD
   512 ;;		_ADC_Read
   513 ;;		_DOORSTATE
   514 ;;		_GetKeyPressed
   515 ;;		_LCD_Print_Hex
   516 ;;		_LCD_Start
   517 ;;		_Move_Cursor_L
   518 ;;		_Move_Cursor_R
   519 ;;		_Move_Cursor_To
   520 ;;		_ONStatus
   521 ;;		_PrintLINE1
   522 ;;		_PrintLINE2
   523 ;;		_SETHEAT_LCD
   524 ;;		_SETTIME_LCD
   525 ;;		___wmul
   526 ;;		_lcd_init
   527 ;;		_send_a_command
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  0000'                    _main:	
   536  0000'                    l1086:	
   537                           ;incstack = 0
   538                           ; Regs used in _main: [allreg]
   539                           
   540                           
   541                           ;Project Main.c: 50:     TRISB=0x18;
   542  0000' 3018               	movlw	24
   543  0001' 1683               	bsf	3,5	;RP0=1, select bank1
   544  0002' 1303               	bcf	3,6	;RP1=0, select bank1
   545  0003' 0086               	movwf	6	;volatile
   546                           
   547                           ;Project Main.c: 51:     TRISC=0x01;
   548  0004' 3001               	movlw	1
   549  0005' 0087               	movwf	7	;volatile
   550  0006'                    l1088:	
   551                           
   552                           ;Project Main.c: 52:     TRISD&=0x00;
   553  0006' 0188               	clrf	8	;volatile
   554  0007'                    l1090:	
   555                           
   556                           ;Project Main.c: 53:     TRISE&=0x00;
   557  0007' 0189               	clrf	9	;volatile
   558  0008'                    l1092:	
   559                           
   560                           ;Project Main.c: 55:     lcd_init();
   561  0008' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_init
   562  000D'                    l1094:	
   563                           
   564                           ;Project Main.c: 56:     LCD_Start();
   565  000D' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Start
   566                           
   567                           ;Project Main.c: 57:     _delay((unsigned long)((1000)*(16000000UL/4000.0)));
   568  0012' 3015               	movlw	21
   569  0013' 1283               	bcf	3,5	;RP0=0, select bank0
   570  0014' 1303               	bcf	3,6	;RP1=0, select bank0
   571  0015' 0084'              	movwf	??_main+2
   572  0016' 304B               	movlw	75
   573  0017' 0083'              	movwf	??_main+1
   574  0018' 30BD               	movlw	189
   575  0019' 0082'              	movwf	??_main
   576  001A'                    u887:	
   577  001A' 0B82'              	decfsz	??_main,f
   578  001B' 2800'              	goto	u887
   579  001C' 0B83'              	decfsz	??_main+1,f
   580  001D' 2800'              	goto	u887
   581  001E' 0B84'              	decfsz	??_main+2,f
   582  001F' 2800'              	goto	u887
   583  0020' 2800'              	nop2
   584  0021' 2800'              	goto	l1206
   585  0022'                    l1096:	
   586                           
   587                           ;Project Main.c: 64:         {;Project Main.c: 65:             DOORSTATE();
   588  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	_DOORSTATE
   589  0027'                    l1098:	
   590                           
   591                           ;Project Main.c: 66:                 if(STATEF==0){
   592  0027' 0800'              	movf	_STATEF,w	;volatile
   593  0028' 1D03               	btfss	3,2
   594  0029' 2800'              	goto	u611
   595  002A' 2800'              	goto	u610
   596  002B'                    u611:	
   597  002B' 2800'              	goto	l1104
   598  002C'                    u610:	
   599  002C'                    l1100:	
   600                           
   601                           ;Project Main.c: 67:                     SETTIME_LCD();
   602  002C' 120A' 118A' 2000' 120A' 118A' 	fcall	_SETTIME_LCD
   603  0031'                    l1102:	
   604                           
   605                           ;Project Main.c: 68:                     digit=0;
   606  0031' 0182'              	clrf	_digit
   607  0032'                    l1104:	
   608                           
   609                           ;Project Main.c: 70:             STATEF=1;
   610  0032' 3001               	movlw	1
   611  0033' 1283               	bcf	3,5	;RP0=0, select bank0
   612  0034' 1303               	bcf	3,6	;RP1=0, select bank0
   613  0035' 0082'              	movwf	??_main
   614  0036' 0802'              	movf	??_main,w
   615  0037' 0080'              	movwf	_STATEF	;volatile
   616  0038'                    l1106:	
   617                           
   618                           ;Project Main.c: 72:             if(!PORTBbits.RB5){
   619  0038' 1A86               	btfsc	6,5	;volatile
   620  0039' 2800'              	goto	u621
   621  003A' 2800'              	goto	u620
   622  003B'                    u621:	
   623  003B' 2800'              	goto	l1116
   624  003C'                    u620:	
   625  003C'                    l1108:	
   626                           
   627                           ;Project Main.c: 73:                 _delay((unsigned long)((60)*(16000000UL/4000.0)));
   628  003C' 3002               	movlw	2
   629  003D' 1283               	bcf	3,5	;RP0=0, select bank0
   630  003E' 1303               	bcf	3,6	;RP1=0, select bank0
   631  003F' 0084'              	movwf	??_main+2
   632  0040' 3038               	movlw	56
   633  0041' 0083'              	movwf	??_main+1
   634  0042' 30AC               	movlw	172
   635  0043' 0082'              	movwf	??_main
   636  0044'                    u897:	
   637  0044' 0B82'              	decfsz	??_main,f
   638  0045' 2800'              	goto	u897
   639  0046' 0B83'              	decfsz	??_main+1,f
   640  0047' 2800'              	goto	u897
   641  0048' 0B84'              	decfsz	??_main+2,f
   642  0049' 2800'              	goto	u897
   643  004A' 0000               	nop
   644  004B'                    l1110:	
   645                           
   646                           ;Project Main.c: 74:                 if(!PORTBbits.RB5){
   647  004B' 1283               	bcf	3,5	;RP0=0, select bank0
   648  004C' 1303               	bcf	3,6	;RP1=0, select bank0
   649  004D' 1A86               	btfsc	6,5	;volatile
   650  004E' 2800'              	goto	u631
   651  004F' 2800'              	goto	u630
   652  0050'                    u631:	
   653  0050' 2800'              	goto	l1116
   654  0051'                    u630:	
   655  0051'                    l81:	
   656  0051' 1E86               	btfss	6,5	;volatile
   657  0052' 2800'              	goto	u641
   658  0053' 2800'              	goto	u640
   659  0054'                    u641:	
   660  0054' 2800'              	goto	l81
   661  0055'                    u640:	
   662  0055'                    l1114:	
   663                           
   664                           ;Project Main.c: 76:                         _delay((unsigned long)((100)*(16000000UL/40
      +                          00.0)));
   665  0055' 3003               	movlw	3
   666  0056' 1283               	bcf	3,5	;RP0=0, select bank0
   667  0057' 1303               	bcf	3,6	;RP1=0, select bank0
   668  0058' 0084'              	movwf	??_main+2
   669  0059' 3008               	movlw	8
   670  005A' 0083'              	movwf	??_main+1
   671  005B' 3076               	movlw	118
   672  005C' 0082'              	movwf	??_main
   673  005D'                    u907:	
   674  005D' 0B82'              	decfsz	??_main,f
   675  005E' 2800'              	goto	u907
   676  005F' 0B83'              	decfsz	??_main+1,f
   677  0060' 2800'              	goto	u907
   678  0061' 0B84'              	decfsz	??_main+2,f
   679  0062' 2800'              	goto	u907
   680  0063' 0000               	nop
   681                           
   682                           ;Project Main.c: 77:                         STATEF=2;
   683  0064' 3002               	movlw	2
   684  0065' 1283               	bcf	3,5	;RP0=0, select bank0
   685  0066' 1303               	bcf	3,6	;RP1=0, select bank0
   686  0067' 0082'              	movwf	??_main
   687  0068' 0802'              	movf	??_main,w
   688  0069' 0080'              	movwf	_STATEF	;volatile
   689  006A'                    l1116:	
   690                           
   691                           ;Project Main.c: 81:             if(digit==2)
   692  006A' 3002               	movlw	2
   693  006B' 0602'              	xorwf	_digit,w
   694  006C' 1D03               	btfss	3,2
   695  006D' 2800'              	goto	u651
   696  006E' 2800'              	goto	u650
   697  006F'                    u651:	
   698  006F' 2800'              	goto	l1124
   699  0070'                    u650:	
   700  0070'                    l1118:	
   701                           
   702                           ;Project Main.c: 82:             {;Project Main.c: 83:                 ++digit;
   703  0070' 3001               	movlw	1
   704  0071' 0082'              	movwf	??_main
   705  0072' 0802'              	movf	??_main,w
   706  0073' 0782'              	addwf	_digit,f
   707  0074'                    l1120:	
   708                           
   709                           ;Project Main.c: 84:                 Move_Cursor_To(0,digit);
   710  0074' 0802'              	movf	_digit,w
   711  0075' 0082'              	movwf	??_main
   712  0076' 0802'              	movf	??_main,w
   713  0077' 0080'              	movwf	_Move_Cursor_To$1
   714  0078' 3000               	movlw	0
   715  0079' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
   716  007E'                    l1122:	
   717                           
   718                           ;Project Main.c: 85:                 send_a_command(0x0F);
   719  007E' 300F               	movlw	15
   720  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
   721  0084'                    l1124:	
   722                           
   723                           ;Project Main.c: 87:             Key=0xFF;
   724  0084' 30FF               	movlw	255
   725  0085' 1283               	bcf	3,5	;RP0=0, select bank0
   726  0086' 1303               	bcf	3,6	;RP1=0, select bank0
   727  0087' 0082'              	movwf	??_main
   728  0088' 0802'              	movf	??_main,w
   729  0089' 0080'              	movwf	_Key
   730  008A'                    l1126:	
   731                           
   732                           ;Project Main.c: 88:             Key=GetKeyPressed();
   733  008A' 120A' 118A' 2000' 120A' 118A' 	fcall	_GetKeyPressed
   734  008F' 1283               	bcf	3,5	;RP0=0, select bank0
   735  0090' 1303               	bcf	3,6	;RP1=0, select bank0
   736  0091' 0082'              	movwf	??_main
   737  0092' 0802'              	movf	??_main,w
   738  0093' 0080'              	movwf	_Key
   739  0094'                    l1128:	
   740                           
   741                           ;Project Main.c: 89:             _delay((unsigned long)((5)*(16000000UL/4000.0)));
   742  0094' 301A               	movlw	26
   743  0095' 1283               	bcf	3,5	;RP0=0, select bank0
   744  0096' 1303               	bcf	3,6	;RP1=0, select bank0
   745  0097' 0083'              	movwf	??_main+1
   746  0098' 30F7               	movlw	247
   747  0099' 0082'              	movwf	??_main
   748  009A'                    u917:	
   749  009A' 0B82'              	decfsz	??_main,f
   750  009B' 2800'              	goto	u917
   751  009C' 0B83'              	decfsz	??_main+1,f
   752  009D' 2800'              	goto	u917
   753  009E' 2800'              	nop2
   754  009F'                    l1130:	
   755                           
   756                           ;Project Main.c: 90:             if((Key<=0x3B) && (Key >=0x30) && (digit==3))
   757  009F' 303C               	movlw	60
   758  00A0' 0200'              	subwf	_Key,w
   759  00A1' 1803               	skipnc
   760  00A2' 2800'              	goto	u661
   761  00A3' 2800'              	goto	u660
   762  00A4'                    u661:	
   763  00A4' 2800'              	goto	l1148
   764  00A5'                    u660:	
   765  00A5'                    l1132:	
   766  00A5' 3030               	movlw	48
   767  00A6' 0200'              	subwf	_Key,w
   768  00A7' 1C03               	skipc
   769  00A8' 2800'              	goto	u671
   770  00A9' 2800'              	goto	u670
   771  00AA'                    u671:	
   772  00AA' 2800'              	goto	l1148
   773  00AB'                    u670:	
   774  00AB'                    l1134:	
   775  00AB' 3003               	movlw	3
   776  00AC' 0602'              	xorwf	_digit,w
   777  00AD' 1D03               	btfss	3,2
   778  00AE' 2800'              	goto	u681
   779  00AF' 2800'              	goto	u680
   780  00B0'                    u681:	
   781  00B0' 2800'              	goto	l1148
   782  00B1'                    u680:	
   783  00B1'                    l1136:	
   784                           
   785                           ;Project Main.c: 91:             {;Project Main.c: 92:                 if(Key>=0x36)
   786  00B1' 3036               	movlw	54
   787  00B2' 0200'              	subwf	_Key,w
   788  00B3' 1C03               	skipc
   789  00B4' 2800'              	goto	u691
   790  00B5' 2800'              	goto	u690
   791  00B6'                    u691:	
   792  00B6' 2800'              	goto	l1142
   793  00B7'                    u690:	
   794  00B7'                    l1138:	
   795                           
   796                           ;Project Main.c: 93:                 {;Project Main.c: 94:                     TIME[digi
      +                          t]=0x35;
   797  00B7' 3035               	movlw	53
   798  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
   799  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
   800  00BA' 0082'              	movwf	??_main
   801  00BB' 0802'              	movf	_digit,w
   802  00BC' 3E00'              	addlw	(low (_TIME| 0))& (0+255)
   803  00BD' 0084               	movwf	4
   804  00BE' 0802'              	movf	??_main,w
   805  00BF' 1383               	bcf	3,7	;select IRP bank0
   806  00C0' 0080               	movwf	0
   807  00C1'                    l1140:	
   808                           
   809                           ;Project Main.c: 95:                     Key=0x35;
   810  00C1' 3035               	movlw	53
   811  00C2' 0082'              	movwf	??_main
   812  00C3' 0802'              	movf	??_main,w
   813  00C4' 0080'              	movwf	_Key
   814                           
   815                           ;Project Main.c: 96:                 }
   816  00C5' 2800'              	goto	l1144
   817  00C6'                    l1142:	
   818                           
   819                           ;Project Main.c: 98:                 {;Project Main.c: 99:                     TIME[digi
      +                          t]=Key;
   820  00C6' 0800'              	movf	_Key,w
   821  00C7' 1283               	bcf	3,5	;RP0=0, select bank0
   822  00C8' 1303               	bcf	3,6	;RP1=0, select bank0
   823  00C9' 0082'              	movwf	??_main
   824  00CA' 0802'              	movf	_digit,w
   825  00CB' 3E00'              	addlw	(low (_TIME| 0))& (0+255)
   826  00CC' 0084               	movwf	4
   827  00CD' 0802'              	movf	??_main,w
   828  00CE' 1383               	bcf	3,7	;select IRP bank0
   829  00CF' 0080               	movwf	0
   830  00D0'                    l1144:	
   831                           
   832                           ;Project Main.c: 101:             digit++;
   833  00D0' 3001               	movlw	1
   834  00D1' 0082'              	movwf	??_main
   835  00D2' 0802'              	movf	??_main,w
   836  00D3' 0782'              	addwf	_digit,f
   837  00D4'                    l1146:	
   838                           
   839                           ;Project Main.c: 102:             LCD_Print_Hex(Key);
   840  00D4' 0800'              	movf	_Key,w
   841  00D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Print_Hex
   842                           
   843                           ;Project Main.c: 103:             }
   844  00DA' 2800'              	goto	l1198
   845  00DB'                    l1148:	
   846  00DB' 303C               	movlw	60
   847  00DC' 0200'              	subwf	_Key,w
   848  00DD' 1803               	skipnc
   849  00DE' 2800'              	goto	u701
   850  00DF' 2800'              	goto	u700
   851  00E0'                    u701:	
   852  00E0' 2800'              	goto	l1158
   853  00E1'                    u700:	
   854  00E1'                    l1150:	
   855  00E1' 3030               	movlw	48
   856  00E2' 0200'              	subwf	_Key,w
   857  00E3' 1C03               	skipc
   858  00E4' 2800'              	goto	u711
   859  00E5' 2800'              	goto	u710
   860  00E6'                    u711:	
   861  00E6' 2800'              	goto	l1158
   862  00E7'                    u710:	
   863  00E7'                    l1152:	
   864                           
   865                           ;Project Main.c: 105:             {;Project Main.c: 106:                 TIME[digit]=Key
      +                          ;
   866  00E7' 0800'              	movf	_Key,w
   867  00E8' 1283               	bcf	3,5	;RP0=0, select bank0
   868  00E9' 1303               	bcf	3,6	;RP1=0, select bank0
   869  00EA' 0082'              	movwf	??_main
   870  00EB' 0802'              	movf	_digit,w
   871  00EC' 3E00'              	addlw	(low (_TIME| 0))& (0+255)
   872  00ED' 0084               	movwf	4
   873  00EE' 0802'              	movf	??_main,w
   874  00EF' 1383               	bcf	3,7	;select IRP bank0
   875  00F0' 0080               	movwf	0
   876  00F1'                    l1154:	
   877                           
   878                           ;Project Main.c: 107:                 digit++;
   879  00F1' 3001               	movlw	1
   880  00F2' 0082'              	movwf	??_main
   881  00F3' 0802'              	movf	??_main,w
   882  00F4' 0782'              	addwf	_digit,f
   883  00F5'                    l1156:	
   884                           
   885                           ;Project Main.c: 108:                 LCD_Print_Hex(Key);
   886  00F5' 0800'              	movf	_Key,w
   887  00F6' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Print_Hex
   888                           
   889                           ;Project Main.c: 109:             }
   890  00FB' 2800'              	goto	l1198
   891  00FC'                    l1158:	
   892  00FC' 0300'              	decf	_Key,w
   893  00FD' 1D03               	btfss	3,2
   894  00FE' 2800'              	goto	u721
   895  00FF' 2800'              	goto	u720
   896  0100'                    u721:	
   897  0100' 2800'              	goto	l1176
   898  0101'                    u720:	
   899  0101'                    l1160:	
   900                           
   901                           ;Project Main.c: 111:             {;Project Main.c: 112:                digit--;
   902  0101' 3001               	movlw	1
   903  0102' 0282'              	subwf	_digit,f
   904                           
   905                           ;Project Main.c: 113:                if(digit==0xFF)
   906  0103' 0A02'              	incf	_digit,w
   907  0104' 1D03               	btfss	3,2
   908  0105' 2800'              	goto	u731
   909  0106' 2800'              	goto	u730
   910  0107'                    u731:	
   911  0107' 2800'              	goto	l1168
   912  0108'                    u730:	
   913  0108'                    l1162:	
   914                           
   915                           ;Project Main.c: 114:                 {;Project Main.c: 115:                    digit=4;
   916  0108' 3004               	movlw	4
   917  0109' 1283               	bcf	3,5	;RP0=0, select bank0
   918  010A' 1303               	bcf	3,6	;RP1=0, select bank0
   919  010B' 0082'              	movwf	??_main
   920  010C' 0802'              	movf	??_main,w
   921  010D' 0082'              	movwf	_digit
   922  010E'                    l1164:	
   923                           
   924                           ;Project Main.c: 116:                    Move_Cursor_To(0,digit);
   925  010E' 3004               	movlw	4
   926  010F' 0082'              	movwf	??_main
   927  0110' 0802'              	movf	??_main,w
   928  0111' 0080'              	movwf	_Move_Cursor_To$1
   929  0112' 3000               	movlw	0
   930  0113' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
   931  0118'                    l1166:	
   932                           
   933                           ;Project Main.c: 117:                    send_a_command(0x0F);
   934  0118' 300F               	movlw	15
   935  0119' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
   936                           
   937                           ;Project Main.c: 118:                 }
   938  011E' 2800'              	goto	l1198
   939  011F'                    l1168:	
   940  011F' 3002               	movlw	2
   941  0120' 0602'              	xorwf	_digit,w
   942  0121' 1D03               	btfss	3,2
   943  0122' 2800'              	goto	u741
   944  0123' 2800'              	goto	u740
   945  0124'                    u741:	
   946  0124' 2800'              	goto	l1174
   947  0125'                    u740:	
   948  0125'                    l1170:	
   949                           
   950                           ;Project Main.c: 120:                 {;Project Main.c: 121:                    digit=1;
   951  0125' 0182'              	clrf	_digit
   952  0126' 0A82'              	incf	_digit,f
   953  0127'                    l1172:	
   954                           
   955                           ;Project Main.c: 122:                    Move_Cursor_To(0,digit);
   956  0127' 0180'              	clrf	_Move_Cursor_To$1
   957  0128' 0A80'              	incf	_Move_Cursor_To$1,f
   958  0129' 3000               	movlw	0
   959  012A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
   960                           
   961                           ;Project Main.c: 123:                    send_a_command(0x0F);
   962  012F' 300F               	movlw	15
   963  0130' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
   964                           
   965                           ;Project Main.c: 124:                 }
   966  0135' 2800'              	goto	l1198
   967  0136'                    l1174:	
   968                           
   969                           ;Project Main.c: 126:                 {;Project Main.c: 127:                     Move_Cu
      +                          rsor_L(1);
   970  0136' 3001               	movlw	1
   971  0137' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_L
   972  013C' 2800'              	goto	l1198
   973  013D'                    l1176:	
   974  013D' 3002               	movlw	2
   975  013E' 0600'              	xorwf	_Key,w
   976  013F' 1D03               	btfss	3,2
   977  0140' 2800'              	goto	u751
   978  0141' 2800'              	goto	u750
   979  0142'                    u751:	
   980  0142' 2800'              	goto	l90
   981  0143'                    u750:	
   982  0143'                    l1178:	
   983                           
   984                           ;Project Main.c: 131:             {;Project Main.c: 132:                 digit++;
   985  0143' 3001               	movlw	1
   986  0144' 1283               	bcf	3,5	;RP0=0, select bank0
   987  0145' 1303               	bcf	3,6	;RP1=0, select bank0
   988  0146' 0082'              	movwf	??_main
   989  0147' 0802'              	movf	??_main,w
   990  0148' 0782'              	addwf	_digit,f
   991  0149'                    l1180:	
   992                           
   993                           ;Project Main.c: 133:                 if(digit>=5)
   994  0149' 3005               	movlw	5
   995  014A' 0202'              	subwf	_digit,w
   996  014B' 1C03               	skipc
   997  014C' 2800'              	goto	u761
   998  014D' 2800'              	goto	u760
   999  014E'                    u761:	
  1000  014E' 2800'              	goto	l1188
  1001  014F'                    u760:	
  1002  014F'                    l1182:	
  1003                           
  1004                           ;Project Main.c: 134:                 {;Project Main.c: 135:                     digit=0
      +                          ;
  1005  014F' 0182'              	clrf	_digit
  1006  0150'                    l1184:	
  1007                           
  1008                           ;Project Main.c: 136:                     Move_Cursor_To(0,digit);
  1009  0150' 0180'              	clrf	_Move_Cursor_To$1
  1010  0151' 3000               	movlw	0
  1011  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
  1012  0157'                    l1186:	
  1013                           
  1014                           ;Project Main.c: 137:                     send_a_command(0x0F);
  1015  0157' 300F               	movlw	15
  1016  0158' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
  1017                           
  1018                           ;Project Main.c: 138:                 }
  1019  015D' 2800'              	goto	l1198
  1020  015E'                    l1188:	
  1021  015E' 3002               	movlw	2
  1022  015F' 0602'              	xorwf	_digit,w
  1023  0160' 1D03               	btfss	3,2
  1024  0161' 2800'              	goto	u771
  1025  0162' 2800'              	goto	u770
  1026  0163'                    u771:	
  1027  0163' 2800'              	goto	l1196
  1028  0164'                    u770:	
  1029  0164'                    l1190:	
  1030                           
  1031                           ;Project Main.c: 140:                  {;Project Main.c: 141:                      digit
      +                          =3;
  1032  0164' 3003               	movlw	3
  1033  0165' 0082'              	movwf	??_main
  1034  0166' 0802'              	movf	??_main,w
  1035  0167' 0082'              	movwf	_digit
  1036  0168'                    l1192:	
  1037                           
  1038                           ;Project Main.c: 142:                      Move_Cursor_To(0,digit);
  1039  0168' 3003               	movlw	3
  1040  0169' 0082'              	movwf	??_main
  1041  016A' 0802'              	movf	??_main,w
  1042  016B' 0080'              	movwf	_Move_Cursor_To$1
  1043  016C' 3000               	movlw	0
  1044  016D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
  1045  0172'                    l1194:	
  1046                           
  1047                           ;Project Main.c: 143:                      send_a_command(0x0F);
  1048  0172' 300F               	movlw	15
  1049  0173' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
  1050                           
  1051                           ;Project Main.c: 144:                   }
  1052  0178' 2800'              	goto	l1198
  1053  0179'                    l1196:	
  1054                           
  1055                           ;Project Main.c: 146:                  {;Project Main.c: 147:                     Move_C
      +                          ursor_R(1);
  1056  0179' 3001               	movlw	1
  1057  017A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_R
  1058  017F' 2800'              	goto	l1198
  1059  0180'                    l90:	
  1060  0180'                    l1198:	
  1061                           
  1062                           ;Project Main.c: 152:             Key=0xFF;
  1063  0180' 30FF               	movlw	255
  1064  0181' 1283               	bcf	3,5	;RP0=0, select bank0
  1065  0182' 1303               	bcf	3,6	;RP1=0, select bank0
  1066  0183' 0082'              	movwf	??_main
  1067  0184' 0802'              	movf	??_main,w
  1068  0185' 0080'              	movwf	_Key
  1069                           
  1070                           ;Project Main.c: 154:             if(digit>=5)
  1071  0186' 3005               	movlw	5
  1072  0187' 0202'              	subwf	_digit,w
  1073  0188' 1C03               	skipc
  1074  0189' 2800'              	goto	u781
  1075  018A' 2800'              	goto	u780
  1076  018B'                    u781:	
  1077  018B' 2800'              	goto	l1206
  1078  018C'                    u780:	
  1079  018C'                    l1200:	
  1080                           
  1081                           ;Project Main.c: 155:             {;Project Main.c: 156:                digit=0;
  1082  018C' 0182'              	clrf	_digit
  1083  018D'                    l1202:	
  1084                           
  1085                           ;Project Main.c: 157:                Move_Cursor_To(0,digit);
  1086  018D' 0180'              	clrf	_Move_Cursor_To$1
  1087  018E' 3000               	movlw	0
  1088  018F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Move_Cursor_To
  1089  0194'                    l1204:	
  1090                           
  1091                           ;Project Main.c: 158:                send_a_command(0x0F);
  1092  0194' 300F               	movlw	15
  1093  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	_send_a_command
  1094  019A'                    l1206:	
  1095                           
  1096                           ;Project Main.c: 63:         while((digit<5)&&(STATEF<=1))
  1097  019A' 3005               	movlw	5
  1098  019B' 0202'              	subwf	_digit,w
  1099  019C' 1803               	skipnc
  1100  019D' 2800'              	goto	u791
  1101  019E' 2800'              	goto	u790
  1102  019F'                    u791:	
  1103  019F' 2800'              	goto	l107
  1104  01A0'                    u790:	
  1105  01A0'                    l1208:	
  1106  01A0' 3002               	movlw	2
  1107  01A1' 0200'              	subwf	_STATEF,w	;volatile
  1108  01A2' 1C03               	skipc
  1109  01A3' 2800'              	goto	u801
  1110  01A4' 2800'              	goto	u800
  1111  01A5'                    u801:	
  1112  01A5' 2800'              	goto	l1096
  1113  01A6'                    u800:	
  1114  01A6' 2800'              	goto	l107
  1115  01A7'                    l1210:	
  1116                           
  1117                           ;Project Main.c: 166:         {;Project Main.c: 167:             DOORSTATE();
  1118  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	_DOORSTATE
  1119  01AC'                    l1212:	
  1120                           
  1121                           ;Project Main.c: 168:             if(STATEF==2)
  1122  01AC' 3002               	movlw	2
  1123  01AD' 0600'              	xorwf	_STATEF,w	;volatile
  1124  01AE' 1D03               	btfss	3,2
  1125  01AF' 2800'              	goto	u811
  1126  01B0' 2800'              	goto	u810
  1127  01B1'                    u811:	
  1128  01B1' 2800'              	goto	l1216
  1129  01B2'                    u810:	
  1130  01B2'                    l1214:	
  1131                           
  1132                           ;Project Main.c: 169:             {;Project Main.c: 170:                 lcd_init();
  1133  01B2' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_init
  1134                           
  1135                           ;Project Main.c: 171:                 SETHEAT_LCD();
  1136  01B7' 120A' 118A' 2000' 120A' 118A' 	fcall	_SETHEAT_LCD
  1137  01BC'                    l1216:	
  1138                           
  1139                           ;Project Main.c: 173:             STATEF=3;
  1140  01BC' 3003               	movlw	3
  1141  01BD' 1283               	bcf	3,5	;RP0=0, select bank0
  1142  01BE' 1303               	bcf	3,6	;RP1=0, select bank0
  1143  01BF' 0082'              	movwf	??_main
  1144  01C0' 0802'              	movf	??_main,w
  1145  01C1' 0080'              	movwf	_STATEF	;volatile
  1146  01C2'                    l1218:	
  1147                           
  1148                           ;Project Main.c: 175:             ADC_Read(Temp);
  1149  01C2' 3000'              	movlw	(low (_Temp| 0))& (0+255)
  1150  01C3' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_Read
  1151  01C8'                    l1220:	
  1152                           
  1153                           ;Project Main.c: 176:             ADC_LCD(Temp);
  1154  01C8' 3000'              	movlw	(low (_Temp| 0))& (0+255)
  1155  01C9' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_LCD
  1156  01CE'                    l1222:	
  1157                           
  1158                           ;Project Main.c: 178:             if(!PORTBbits.RB5){
  1159  01CE' 1283               	bcf	3,5	;RP0=0, select bank0
  1160  01CF' 1303               	bcf	3,6	;RP1=0, select bank0
  1161  01D0' 1A86               	btfsc	6,5	;volatile
  1162  01D1' 2800'              	goto	u821
  1163  01D2' 2800'              	goto	u820
  1164  01D3'                    u821:	
  1165  01D3' 2800'              	goto	l107
  1166  01D4'                    u820:	
  1167  01D4'                    l1224:	
  1168                           
  1169                           ;Project Main.c: 179:                 _delay((unsigned long)((60)*(16000000UL/4000.0)));
  1170  01D4' 3002               	movlw	2
  1171  01D5' 1283               	bcf	3,5	;RP0=0, select bank0
  1172  01D6' 1303               	bcf	3,6	;RP1=0, select bank0
  1173  01D7' 0084'              	movwf	??_main+2
  1174  01D8' 3038               	movlw	56
  1175  01D9' 0083'              	movwf	??_main+1
  1176  01DA' 30AC               	movlw	172
  1177  01DB' 0082'              	movwf	??_main
  1178  01DC'                    u927:	
  1179  01DC' 0B82'              	decfsz	??_main,f
  1180  01DD' 2800'              	goto	u927
  1181  01DE' 0B83'              	decfsz	??_main+1,f
  1182  01DF' 2800'              	goto	u927
  1183  01E0' 0B84'              	decfsz	??_main+2,f
  1184  01E1' 2800'              	goto	u927
  1185  01E2' 0000               	nop
  1186  01E3'                    l1226:	
  1187                           
  1188                           ;Project Main.c: 180:                 if(!PORTBbits.RB5)
  1189  01E3' 1283               	bcf	3,5	;RP0=0, select bank0
  1190  01E4' 1303               	bcf	3,6	;RP1=0, select bank0
  1191  01E5' 1A86               	btfsc	6,5	;volatile
  1192  01E6' 2800'              	goto	u831
  1193  01E7' 2800'              	goto	u830
  1194  01E8'                    u831:	
  1195  01E8' 2800'              	goto	l107
  1196  01E9'                    u830:	
  1197  01E9'                    l112:	
  1198  01E9' 1E86               	btfss	6,5	;volatile
  1199  01EA' 2800'              	goto	u841
  1200  01EB' 2800'              	goto	u840
  1201  01EC'                    u841:	
  1202  01EC' 2800'              	goto	l112
  1203  01ED'                    u840:	
  1204  01ED'                    l1230:	
  1205                           
  1206                           ;Project Main.c: 183:                     _delay((unsigned long)((100)*(16000000UL/4000.
      +                          0)));
  1207  01ED' 3003               	movlw	3
  1208  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  1209  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  1210  01F0' 0084'              	movwf	??_main+2
  1211  01F1' 3008               	movlw	8
  1212  01F2' 0083'              	movwf	??_main+1
  1213  01F3' 3076               	movlw	118
  1214  01F4' 0082'              	movwf	??_main
  1215  01F5'                    u937:	
  1216  01F5' 0B82'              	decfsz	??_main,f
  1217  01F6' 2800'              	goto	u937
  1218  01F7' 0B83'              	decfsz	??_main+1,f
  1219  01F8' 2800'              	goto	u937
  1220  01F9' 0B84'              	decfsz	??_main+2,f
  1221  01FA' 2800'              	goto	u937
  1222  01FB' 0000               	nop
  1223                           
  1224                           ;Project Main.c: 184:                     STATEF=4;
  1225  01FC' 3004               	movlw	4
  1226  01FD' 1283               	bcf	3,5	;RP0=0, select bank0
  1227  01FE' 1303               	bcf	3,6	;RP1=0, select bank0
  1228  01FF' 0082'              	movwf	??_main
  1229  0200' 0802'              	movf	??_main,w
  1230  0201' 0080'              	movwf	_STATEF	;volatile
  1231  0202'                    l107:	
  1232                           ;Project Main.c: 187:         }
  1233                           
  1234                           
  1235                           ;Project Main.c: 165:         while (STATEF<=3)
  1236  0202' 3004               	movlw	4
  1237  0203' 0200'              	subwf	_STATEF,w	;volatile
  1238  0204' 1C03               	skipc
  1239  0205' 2800'              	goto	u851
  1240  0206' 2800'              	goto	u850
  1241  0207'                    u851:	
  1242  0207' 2800'              	goto	l1210
  1243  0208'                    u850:	
  1244  0208'                    l1232:	
  1245                           
  1246                           ;Project Main.c: 189:         TIMEinSec=(((TIME[0]-0x30)*600)+((TIME[1]-0x30)*60)+((TIME
      +                          [3]-0x30)*10)+((TIME[4]-0x30)));
  1247  0208' 1283               	bcf	3,5	;RP0=0, select bank0
  1248  0209' 1303               	bcf	3,6	;RP1=0, select bank0
  1249  020A' 0800'              	movf	_TIME,w
  1250  020B' 0082'              	movwf	??_main
  1251  020C' 0183'              	clrf	??_main+1
  1252  020D' 0802'              	movf	??_main,w
  1253  020E' 0082'              	movwf	___wmul@multiplier
  1254  020F' 0803'              	movf	??_main+1,w
  1255  0210' 0083'              	movwf	___wmul@multiplier+1
  1256  0211' 3058               	movlw	88
  1257  0212' 0084'              	movwf	___wmul@multiplicand
  1258  0213' 3002               	movlw	2
  1259  0214' 0085'              	movwf	___wmul@multiplicand+1
  1260  0215' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1261  021A' 0802'              	movf	?___wmul,w
  1262  021B' 1283               	bcf	3,5	;RP0=0, select bank0
  1263  021C' 1303               	bcf	3,6	;RP1=0, select bank0
  1264  021D' 0084'              	movwf	??_main+2
  1265  021E' 0803'              	movf	?___wmul+1,w
  1266  021F' 0085'              	movwf	??_main+3
  1267  0220' 0801'              	movf	_TIME+1,w
  1268  0221' 0086'              	movwf	??_main+4
  1269  0222' 0187'              	clrf	??_main+5
  1270  0223' 0806'              	movf	??_main+4,w
  1271  0224' 0082'              	movwf	___wmul@multiplier
  1272  0225' 0807'              	movf	??_main+5,w
  1273  0226' 0083'              	movwf	___wmul@multiplier+1
  1274  0227' 303C               	movlw	60
  1275  0228' 0084'              	movwf	___wmul@multiplicand
  1276  0229' 3000               	movlw	0
  1277  022A' 0085'              	movwf	___wmul@multiplicand+1
  1278  022B' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1279  0230' 0802'              	movf	?___wmul,w
  1280  0231' 1283               	bcf	3,5	;RP0=0, select bank0
  1281  0232' 1303               	bcf	3,6	;RP1=0, select bank0
  1282  0233' 0704'              	addwf	??_main+2,w
  1283  0234' 0088'              	movwf	??_main+6
  1284  0235' 0803'              	movf	?___wmul+1,w
  1285  0236' 1803               	skipnc
  1286  0237' 0A03'              	incf	?___wmul+1,w
  1287  0238' 0705'              	addwf	??_main+3,w
  1288  0239' 0089'              	movwf	??_main+7
  1289  023A' 0803'              	movf	_TIME+3,w
  1290  023B' 008A'              	movwf	??_main+8
  1291  023C' 018B'              	clrf	??_main+9
  1292  023D' 080A'              	movf	??_main+8,w
  1293  023E' 0082'              	movwf	___wmul@multiplier
  1294  023F' 080B'              	movf	??_main+9,w
  1295  0240' 0083'              	movwf	___wmul@multiplier+1
  1296  0241' 300A               	movlw	10
  1297  0242' 0084'              	movwf	___wmul@multiplicand
  1298  0243' 3000               	movlw	0
  1299  0244' 0085'              	movwf	___wmul@multiplicand+1
  1300  0245' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1301  024A' 0802'              	movf	?___wmul,w
  1302  024B' 1283               	bcf	3,5	;RP0=0, select bank0
  1303  024C' 1303               	bcf	3,6	;RP1=0, select bank0
  1304  024D' 0708'              	addwf	??_main+6,w
  1305  024E' 008C'              	movwf	??_main+10
  1306  024F' 0803'              	movf	?___wmul+1,w
  1307  0250' 1803               	skipnc
  1308  0251' 0A03'              	incf	?___wmul+1,w
  1309  0252' 0709'              	addwf	??_main+7,w
  1310  0253' 008D'              	movwf	??_main+11
  1311  0254' 0804'              	movf	_TIME+4,w
  1312  0255' 070C'              	addwf	??_main+10,w
  1313  0256' 008E'              	movwf	??_main+12
  1314  0257' 3000               	movlw	0
  1315  0258' 1803               	skipnc
  1316  0259' 3001               	movlw	1
  1317  025A' 070D'              	addwf	??_main+11,w
  1318  025B' 008F'              	movwf	??_main+13
  1319  025C' 080E'              	movf	??_main+12,w
  1320  025D' 3E30               	addlw	48
  1321  025E' 0080'              	movwf	_TIMEinSec
  1322  025F' 080F'              	movf	??_main+13,w
  1323  0260' 1803               	skipnc
  1324  0261' 3E01               	addlw	1
  1325  0262' 3E82               	addlw	130
  1326  0263' 0081'              	movwf	_TIMEinSec+1
  1327  0264'                    l1234:	
  1328                           
  1329                           ;Project Main.c: 191:         if(TIMEinSec>=10)
  1330  0264' 3000               	movlw	0
  1331  0265' 0201'              	subwf	_TIMEinSec+1,w
  1332  0266' 300A               	movlw	10
  1333  0267' 1903               	skipnz
  1334  0268' 0200'              	subwf	_TIMEinSec,w
  1335  0269' 1C03               	skipc
  1336  026A' 2800'              	goto	u861
  1337  026B' 2800'              	goto	u860
  1338  026C'                    u861:	
  1339  026C' 2800'              	goto	l1238
  1340  026D'                    u860:	
  1341  026D'                    l1236:	
  1342                           
  1343                           ;Project Main.c: 192:         {;Project Main.c: 193:         ONStatus(TIMEinSec,Temp);
  1344  026D' 0801'              	movf	_TIMEinSec+1,w
  1345  026E' 0081'              	movwf	_ONStatus$0+1
  1346  026F' 0800'              	movf	_TIMEinSec,w
  1347  0270' 0080'              	movwf	_ONStatus$0
  1348  0271' 3000'              	movlw	(low (_Temp| 0))& (0+255)
  1349  0272' 0082'              	movwf	??_main
  1350  0273' 0802'              	movf	??_main,w
  1351  0274' 0082'              	movwf	_ONStatus$1
  1352  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	_ONStatus
  1353                           
  1354                           ;Project Main.c: 194:         }
  1355  027A' 2800'              	goto	l1206
  1356  027B'                    l1238:	
  1357  027B' 3004               	movlw	4
  1358  027C' 0600'              	xorwf	_STATEF,w	;volatile
  1359  027D' 1D03               	btfss	3,2
  1360  027E' 2800'              	goto	u871
  1361  027F' 2800'              	goto	u870
  1362  0280'                    u871:	
  1363  0280' 2800'              	goto	l117
  1364  0281'                    u870:	
  1365  0281'                    l1240:	
  1366                           
  1367                           ;Project Main.c: 196:         {;Project Main.c: 197:             lcd_init();
  1368  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_init
  1369                           
  1370                           ;Project Main.c: 198:             PrintLINE1(0,13,"Time is Small");
  1371  0286' 300D               	movlw	13
  1372  0287' 1283               	bcf	3,5	;RP0=0, select bank0
  1373  0288' 1303               	bcf	3,6	;RP1=0, select bank0
  1374  0289' 0082'              	movwf	??_main
  1375  028A' 0802'              	movf	??_main,w
  1376  028B' 0080'              	movwf	_PrintLINE1$1
  1377  028C' 3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1378  028D' 0083'              	movwf	??_main+1
  1379  028E' 0803'              	movf	??_main+1,w
  1380  028F' 0081'              	movwf	_PrintLINE1$2
  1381  0290' 3000               	movlw	0
  1382  0291' 120A' 118A' 2000' 120A' 118A' 	fcall	_PrintLINE1
  1383                           
  1384                           ;Project Main.c: 199:             PrintLINE2(0,16,"<ReEnter time>");
  1385  0296' 3010               	movlw	16
  1386  0297' 1283               	bcf	3,5	;RP0=0, select bank0
  1387  0298' 1303               	bcf	3,6	;RP1=0, select bank0
  1388  0299' 0082'              	movwf	??_main
  1389  029A' 0802'              	movf	??_main,w
  1390  029B' 0080'              	movwf	_PrintLINE2$1
  1391  029C' 3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1392  029D' 0083'              	movwf	??_main+1
  1393  029E' 0803'              	movf	??_main+1,w
  1394  029F' 0081'              	movwf	_PrintLINE2$2
  1395  02A0' 3000               	movlw	0
  1396  02A1' 120A' 118A' 2000' 120A' 118A' 	fcall	_PrintLINE2
  1397  02A6'                    l1242:	
  1398                           
  1399                           ;Project Main.c: 200:             STATEF=0;
  1400  02A6' 0180'              	clrf	_STATEF	;volatile
  1401  02A7'                    l1244:	
  1402                           
  1403                           ;Project Main.c: 201:             _delay((unsigned long)((2000)*(16000000UL/4000.0)));
  1404  02A7' 3029               	movlw	41
  1405  02A8' 1283               	bcf	3,5	;RP0=0, select bank0
  1406  02A9' 1303               	bcf	3,6	;RP1=0, select bank0
  1407  02AA' 0084'              	movwf	??_main+2
  1408  02AB' 3096               	movlw	150
  1409  02AC' 0083'              	movwf	??_main+1
  1410  02AD' 307E               	movlw	126
  1411  02AE' 0082'              	movwf	??_main
  1412  02AF'                    u947:	
  1413  02AF' 0B82'              	decfsz	??_main,f
  1414  02B0' 2800'              	goto	u947
  1415  02B1' 0B83'              	decfsz	??_main+1,f
  1416  02B2' 2800'              	goto	u947
  1417  02B3' 0B84'              	decfsz	??_main+2,f
  1418  02B4' 2800'              	goto	u947
  1419  02B5' 0000               	nop
  1420  02B6'                    l1246:	
  1421                           
  1422                           ;Project Main.c: 202:             _delay((unsigned long)((2000)*(16000000UL/4000.0)));
  1423  02B6' 3029               	movlw	41
  1424  02B7' 1283               	bcf	3,5	;RP0=0, select bank0
  1425  02B8' 1303               	bcf	3,6	;RP1=0, select bank0
  1426  02B9' 0084'              	movwf	??_main+2
  1427  02BA' 3096               	movlw	150
  1428  02BB' 0083'              	movwf	??_main+1
  1429  02BC' 307E               	movlw	126
  1430  02BD' 0082'              	movwf	??_main
  1431  02BE'                    u957:	
  1432  02BE' 0B82'              	decfsz	??_main,f
  1433  02BF' 2800'              	goto	u957
  1434  02C0' 0B83'              	decfsz	??_main+1,f
  1435  02C1' 2800'              	goto	u957
  1436  02C2' 0B84'              	decfsz	??_main+2,f
  1437  02C3' 2800'              	goto	u957
  1438  02C4' 0000               	nop
  1439                           
  1440                           ;Project Main.c: 203:         }
  1441  02C5' 2800'              	goto	l1206
  1442  02C6'                    l117:	
  1443  02C6' 2800'              	goto	l1206
  1444  02C7' 120A' 118A' 2800'  	ljmp	start
  1445  02CA'                    __end_of_main:	
  1446                           
  1447                           	psect	text1
  1448  0000'                    __ptext1:	
  1449 ;; *************** function ___wmul *****************
  1450 ;; Defined at:
  1451 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  multiplier      2    2[COMMON] unsigned int 
  1454 ;;  multiplicand    2    4[COMMON] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  product         2    0[BANK0 ] unsigned int 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    2[COMMON] unsigned int 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         4       0       0       0       0
  1467 ;;      Locals:         0       2       0       0       0
  1468 ;;      Temps:          0       0       0       0       0
  1469 ;;      Totals:         4       2       0       0       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function ___wmul
  1482  0000'                    ___wmul:	
  1483  0000'                    l1072:	
  1484                           ;incstack = 0
  1485                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1486                           
  1487  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1488  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1489  0002' 0180'              	clrf	___wmul@product
  1490  0003' 0181'              	clrf	___wmul@product+1
  1491  0004'                    l1074:	
  1492  0004' 1C02'              	btfss	___wmul@multiplier,0
  1493  0005' 2800'              	goto	u571
  1494  0006' 2800'              	goto	u570
  1495  0007'                    u571:	
  1496  0007' 2800'              	goto	l214
  1497  0008'                    u570:	
  1498  0008'                    l1076:	
  1499  0008' 0804'              	movf	___wmul@multiplicand,w
  1500  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1501  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  1502  000B' 0780'              	addwf	___wmul@product,f
  1503  000C' 1803               	skipnc
  1504  000D' 0A81'              	incf	___wmul@product+1,f
  1505  000E' 0805'              	movf	___wmul@multiplicand+1,w
  1506  000F' 0781'              	addwf	___wmul@product+1,f
  1507  0010'                    l214:	
  1508  0010' 3001               	movlw	1
  1509  0011'                    u585:	
  1510  0011' 1003               	clrc
  1511  0012' 0D84'              	rlf	___wmul@multiplicand,f
  1512  0013' 0D85'              	rlf	___wmul@multiplicand+1,f
  1513  0014' 3EFF               	addlw	-1
  1514  0015' 1D03               	skipz
  1515  0016' 2800'              	goto	u585
  1516  0017'                    l1078:	
  1517  0017' 3001               	movlw	1
  1518  0018'                    u595:	
  1519  0018' 1003               	clrc
  1520  0019' 0C83'              	rrf	___wmul@multiplier+1,f
  1521  001A' 0C82'              	rrf	___wmul@multiplier,f
  1522  001B' 3EFF               	addlw	-1
  1523  001C' 1D03               	skipz
  1524  001D' 2800'              	goto	u595
  1525  001E'                    l1080:	
  1526  001E' 0802'              	movf	___wmul@multiplier,w
  1527  001F' 0403'              	iorwf	___wmul@multiplier+1,w
  1528  0020' 1D03               	btfss	3,2
  1529  0021' 2800'              	goto	u601
  1530  0022' 2800'              	goto	u600
  1531  0023'                    u601:	
  1532  0023' 2800'              	goto	l1074
  1533  0024'                    u600:	
  1534  0024'                    l1082:	
  1535  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  1536  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  1537  0026' 0801'              	movf	___wmul@product+1,w
  1538  0027' 0083'              	movwf	?___wmul+1
  1539  0028' 0800'              	movf	___wmul@product,w
  1540  0029' 0082'              	movwf	?___wmul
  1541  002A'                    l216:	
  1542  002A' 0008               	return
  1543  002B'                    __end_of___wmul:	
  1544                           
  1545                           	psect	text2
  1546  0000'                    __ptext2:	
  1547 ;; *************** function _ISR_H *****************
  1548 ;; Defined at:
  1549 ;;		line 210 in file "Project Main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          2       0       0       0       0
  1566 ;;      Totals:         2       0       0       0       0
  1567 ;;Total ram usage:        2 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		Interrupt level 1
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _ISR_H
  1578  0000'                    _ISR_H:	
  1579  0000'                    i1l888:	
  1580                           
  1581                           ;Project Main.c: 212:     if(TMR1IF==1)
  1582  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1583  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1584  0002' 1C0C               	btfss	12,0	;volatile
  1585  0003' 2800'              	goto	u25_21
  1586  0004' 2800'              	goto	u25_20
  1587  0005'                    u25_21:	
  1588  0005' 2800'              	goto	i1l128
  1589  0006'                    u25_20:	
  1590  0006'                    i1l890:	
  1591                           
  1592                           ;Project Main.c: 213:     {;Project Main.c: 214:         TMR1Counter=1;
  1593  0006' 0183'              	clrf	_TMR1Counter
  1594  0007' 0A83'              	incf	_TMR1Counter,f
  1595  0008'                    i1l892:	
  1596                           
  1597                           ;Project Main.c: 215:         TMR1H=0x8A;
  1598  0008' 308A               	movlw	138
  1599  0009' 008F               	movwf	15	;volatile
  1600                           
  1601                           ;Project Main.c: 216:         TMR1L=0xD0;
  1602  000A' 30D0               	movlw	208
  1603  000B' 008E               	movwf	14	;volatile
  1604  000C'                    i1l894:	
  1605                           
  1606                           ;Project Main.c: 217:         TMR1IF=0;
  1607  000C' 100C               	bcf	12,0	;volatile
  1608  000D'                    i1l128:	
  1609  000D' 0801'              	movf	??_ISR_H+1,w
  1610  000E' 008A               	movwf	10
  1611  000F' 0E00'              	swapf	??_ISR_H^(0+4294967168),w
  1612  0010' 0083               	movwf	3
  1613  0011' 0EFE               	swapf	btemp,f
  1614  0012' 0E7E               	swapf	btemp,w
  1615  0013' 0009               	retfie
  1616  0014'                    __end_of_ISR_H:	
  1617  007E                     btemp	set	126	;btemp
  1618  007E                     wtemp0	set	126
  1619                           
  1620                           	psect	intentry
  1621  0000'                    __pintentry:	
  1622                           ;incstack = 0
  1623                           ; Regs used in _ISR_H: [wreg]
  1624                           
  1625  0000'                    interrupt_function:	
  1626  007E                     saved_w	set	btemp
  1627  0000' 00FE               	movwf	btemp
  1628  0001' 0E03               	swapf	3,w
  1629  0002' 0080'              	movwf	??_ISR_H
  1630  0003' 080A               	movf	10,w
  1631  0004' 0081'              	movwf	??_ISR_H+1
  1632  0005' 120A' 118A' 2800'  	ljmp	_ISR_H


Data Sizes:
    Strings     29
    Constant    0
    Data        6
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     16      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    PrintLINE2$2	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    PrintLINE1$2	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    ONStatus$1	PTR unsigned char  size(1) Largest target is 5
		 -> Temp(BANK0[5]), 

    ADC_LCD$0	PTR unsigned char  size(1) Largest target is 5
		 -> Temp(BANK0[5]), 

    ADC_Read$0	PTR unsigned char  size(1) Largest target is 5
		 -> Temp(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _ISR_H in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _ISR_H in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_H in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_H in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_H in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     838
                                              2 BANK0     14    14      0
                            _ADC_LCD
                           _ADC_Read
                          _DOORSTATE
                      _GetKeyPressed
                      _LCD_Print_Hex
                          _LCD_Start
                      _Move_Cursor_L
                      _Move_Cursor_R
                     _Move_Cursor_To
                           _ONStatus
                         _PrintLINE1
                         _PrintLINE2
                        _SETHEAT_LCD
                        _SETTIME_LCD
                             ___wmul
                           _lcd_init
                     _send_a_command
 ---------------------------------------------------------------------------------
 (1) _send_a_command                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     676
                                              2 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SETTIME_LCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SETHEAT_LCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintLINE2                                           2     0      2      24
 ---------------------------------------------------------------------------------
 (1) _PrintLINE1                                           2     0      2      24
 ---------------------------------------------------------------------------------
 (1) _ONStatus                                             3     0      3      24
 ---------------------------------------------------------------------------------
 (1) _Move_Cursor_To                                       1     0      1      72
 ---------------------------------------------------------------------------------
 (1) _Move_Cursor_R                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Move_Cursor_L                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print_Hex                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetKeyPressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DOORSTATE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0       9
 ---------------------------------------------------------------------------------
 (1) _ADC_LCD                                              0     0      0       9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_H                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_LCD
   _ADC_Read
   _DOORSTATE
   _GetKeyPressed
   _LCD_Print_Hex
   _LCD_Start
   _Move_Cursor_L
   _Move_Cursor_R
   _Move_Cursor_To
   _ONStatus
   _PrintLINE1
   _PrintLINE2
   _SETHEAT_LCD
   _SETTIME_LCD
   ___wmul
   _lcd_init
   _send_a_command

 _ISR_H (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 15:33:22 2020

                      pc 0002              __CFG_CP$OFF 0000                       l81 0051  
                     l90 0180               _ONStatus$0 0000               _ONStatus$1 0002  
                     fsr 0004      ___wmul@multiplicand 0004              __CFG_LVP$ON 0000  
                    l112 01E9                      l107 0202                      l117 02C6  
                    l214 0010                      l216 002A                      u600 0024  
                    u601 0023                      u610 002C             __CFG_CPD$OFF 0000  
                    u611 002B                      u700 00E1                      u620 003C  
                    u701 00E0                      u621 003B                      u710 00E7  
                    u630 0051                      u711 00E6                      u631 0050  
                    u800 01A6                      u720 0101                      u640 0055  
                    u801 01A5                      u721 0100                      u641 0054  
                    u570 0008                      u810 01B2                      u730 0108  
                    u650 0070                      u571 0007                      u811 01B1  
                    u731 0107                      u651 006F                      u820 01D4  
                    u740 0125                      u660 00A5                      u821 01D3  
                    u741 0124                      u661 00A4                      u830 01E9  
                    u750 0143                      u670 00AB                      u831 01E8  
                    u751 0142                      u671 00AA                      u840 01ED  
                    u760 014F                      u680 00B1                      u585 0011  
                    u841 01EC                      u761 014E                      u681 00B0  
                    u850 0208                      u770 0164                      u690 00B7  
                    u595 0018                      u851 0207                      u771 0163  
                    u691 00B6                      u907 005D                      u860 026D  
                    u780 018C                      u861 026C                      u781 018B  
                    u917 009A                      u870 0281                      u790 01A0  
                    u871 0280                      u927 01DC                      u791 019F  
                    u937 01F5                      u947 02AF                      u957 02BE  
                    u887 001A                      u897 0044                      _Key 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
          _LCD_Print_Hex 0000*                    l1100 002C                     l1110 004B  
                   l1102 0031                     l1200 018C                     l1120 0074  
                   l1104 0032                     l1210 01A7                     l1202 018D  
                   l1130 009F                     l1122 007E                     l1114 0055  
                   l1106 0038                     l1220 01C8                     l1212 01AC  
                   l1204 0194                     l1140 00C1                     l1132 00A5  
                   l1124 0084                     l1108 003C                     l1116 006A  
                   l1230 01ED                     l1222 01CE                     l1214 01B2  
                   l1150 00E1                     l1142 00C6                     l1134 00AB  
                   l1126 008A                     l1118 0070                     l1206 019A  
                   l1080 001E                     l1072 0000                     l1240 0281  
                   l1232 0208                     l1224 01D4                     l1216 01BC  
                   l1208 01A0                     l1160 0101                     l1152 00E7  
                   l1144 00D0                     l1136 00B1                     l1128 0094  
                   l1082 0024                     l1074 0004                     l1242 02A6  
                   l1234 0264                     l1226 01E3                     l1218 01C2  
                   l1170 0125                     l1162 0108                     l1154 00F1  
                   l1146 00D4                     l1138 00B7                     l1090 0007  
                   l1076 0008                     l1244 02A7                     l1236 026D  
                   l1180 0149                     l1172 0127                     l1164 010E  
                   l1156 00F5                     l1148 00DB                     l1092 0008  
                   l1078 0017                     l1246 02B6                     l1238 027B  
                   l1190 0164                     l1182 014F                     l1174 0136  
                   l1166 0118                     l1158 00FC                     l1094 000D  
                   l1086 0000                     l1192 0168                     l1184 0150  
                   l1168 011F                     l1176 013D                     l1096 0022  
                   l1088 0006                     l1194 0172                     l1186 0157  
                   l1178 0143                     l1098 0027                     l1196 0179  
                   l1188 015E                     l1198 0180                     STR_1 0015  
                   STR_2 0006                     _DOOR 0004                     _TIME 0000  
           __CFG_WRT$OFF 0000                     _Temp 0002                     _main 0000  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000* 
        ?_Move_Cursor_To 0000                    ?_main 0000            __CFG_WDTE$OFF 0000  
                  i1l128 000D                    i1l890 0006                    i1l892 0008  
                  i1l894 000C                    i1l888 0000                    _ISR_H 0000  
                  u25_20 0006                    u25_21 0005                    _TMR1H 000F  
                  _TMR1L 000E                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089            __CFG_PWRTE$ON 0000  
         ?_LCD_Print_Hex 0000                    _digit 0002                    pclath 000A  
                  status 0003                    wtemp0 007E             ?_SETHEAT_LCD 0000  
        __initialization 0000             __end_of_main 02CA                ??_ADC_LCD 0000  
                 ??_main 0002                   ?_ISR_H 0000             ?_SETTIME_LCD 0000  
                 _TMR1IF 0060                   _STATEF 0000           _send_a_command 0000* 
                 ___wmul 0000               _PrintLINE1 0000*              _PrintLINE2 0000* 
           __pdataCOMMON 0000          ??_LCD_Print_Hex 0000                ?_ADC_Read 0000  
                 saved_w 007E  __end_of__initialization 0030            __end_of_ISR_H 0014  
         __pcstackCOMMON 0000             __pidataBANK0 0000                ?_ONStatus 0000  
                ??_ISR_H 0000               ??_ADC_Read 0000               __pbssBANK0 0000  
        ?_send_a_command 0000         ??_Move_Cursor_To 0000               __pmaintext 0000  
                ?___wmul 0002              ?_PrintLINE1 0000              ?_PrintLINE2 0000  
             __pintentry 0000                  _ADC_LCD 0000*              ??_ONStatus 0000  
              ?_lcd_init 0000               __stringtab 0000                _ADC_LCD$0 0000  
                _HeatSET 0001          __size_of___wmul 002B                  __ptext1 0000  
                __ptext2 0000                _DOORSTATE 0000*               _LCD_Start 0000* 
             ??_lcd_init 0000     end_of_initialization 0030            _Move_Cursor_L 0000* 
          _Move_Cursor_R 0000*               _PORTBbits 0006                _TIMEinSec 0000  
             ?_DOORSTATE 0000               ?_LCD_Start 0000           ?_Move_Cursor_L 0000  
         ?_Move_Cursor_R 0000           __end_of___wmul 002B            __pidataCOMMON 0000  
    start_initialization 0000         ??_send_a_command 0000            _GetKeyPressed 0000* 
           ??_PrintLINE1 0000             ??_PrintLINE2 0000                 ??___wmul 0006  
            __pdataBANK0 0000                 ?_ADC_LCD 0000              ??_DOORSTATE 0000  
            __pbssCOMMON 0000                ___latbits 0002            __pcstackBANK0 0000  
         ?_GetKeyPressed 0000              ??_LCD_Start 0000            ??_SETHEAT_LCD 0000  
        ??_Move_Cursor_L 0000          ??_Move_Cursor_R 0000                __pstrings 0000  
         __size_of_ISR_H 0014            ??_SETTIME_LCD 0000                 _ADC_Read 0000* 
      interrupt_function 0000           ___wmul@product 0000              __stringbase 0005  
      ___wmul@multiplier 0002                 _ONStatus 0000*         ??_GetKeyPressed 0000  
             _ADC_Read$0 0000         _Move_Cursor_To$1 0000       __end_of__stringtab 0006  
           _PrintLINE1$1 0000             _PrintLINE1$2 0001             _PrintLINE2$1 0000  
           _PrintLINE2$2 0001                 _lcd_init 0000*           __size_of_main 02CA  
            _SETHEAT_LCD 0000*             _SETTIME_LCD 0000*                intlevel1 0000* 
              stringcode 0000              _TMR1Counter 0003           _Move_Cursor_To 0000* 
               stringdir 0000                 stringtab 0000  
